import discord
from discord.ext import commands
from discord import app_commands
import asyncio
import io
import os
import threading
from flask import Flask

# =========================
# ‚öôÔ∏è Flask keep-alive setup
# =========================
app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ Bot is alive!"

def run_alive():
    app.run(host="0.0.0.0", port=8080)

def keep_alive():
    t = threading.Thread(target=run_alive)
    t.daemon = True
    t.start()

# =========================
# ‚öôÔ∏è Discord Bot setup
# =========================
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"‚úÖ Bot ƒë√£ ƒëƒÉng nh·∫≠p: {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"üîß Slash commands synced: {len(synced)} l·ªánh")
    except Exception as e:
        print(f"‚ùå L·ªói sync slash: {e}")

# =========================
# üìÅ DOCFILE PREFIX CMD
# =========================
@bot.command(name="docfile")
async def docfile_prefix(ctx):
    await ctx.send("üìé G·ª≠i file .txt / .md / .log b·∫°n mu·ªën ƒë·ªçc trong v√≤ng 30 gi√¢y.")

    def check(m):
        return m.author == ctx.author and m.attachments

    try:
        msg = await bot.wait_for("message", timeout=30.0, check=check)
        attachment = msg.attachments[0]

        if not attachment.filename.endswith((".txt", ".md", ".log")):
            await ctx.send("‚ùå Ch·ªâ ch·∫•p nh·∫≠n file .txt, .md, .log th√¥i nha.")
            return

        file_bytes = await attachment.read()
        content = file_bytes.decode("utf-8", errors="ignore")

        if len(content) > 50000:
            await ctx.send("‚ö†Ô∏è File qu√° d√†i (>50.000 k√Ω t·ª±)! Ch·ªâ g·ª≠i ph·∫ßn ƒë·∫ßu.")
            content = content[:50000]

        chunks = [content[i:i+1900] for i in range(0, len(content), 1900)]
        await ctx.send(f"üìñ **N·ªôi dung `{attachment.filename}` ({len(chunks)} ph·∫ßn):**")

        for i, chunk in enumerate(chunks[:10]):  # g·ª≠i t·ªëi ƒëa 10 ph·∫ßn ƒë·ªÉ tr√°nh spam
            await ctx.send(f"```{chunk}```")
        if len(chunks) > 10:
            await ctx.send("‚èπÔ∏è N·ªôi dung b·ªã c·∫Øt b·ªõt (ch·ªâ hi·ªÉn th·ªã 10 ph·∫ßn ƒë·∫ßu).")

    except asyncio.TimeoutError:
        await ctx.send("‚è∞ H·∫øt th·ªùi gian ch·ªù file. H√£y th·ª≠ l·∫°i `!docfile` nh√©.")

# =========================
# üìÅ DOCFILE SLASH CMD
# =========================
@bot.tree.command(name="docfile", description="G·ª≠i file ƒë·ªÉ bot ƒë·ªçc n·ªôi dung")
async def docfile_slash(interaction: discord.Interaction):
    await interaction.response.send_message("üìé G·ª≠i file vƒÉn b·∫£n b·∫°n mu·ªën bot ƒë·ªçc (txt/md/log)... trong v√≤ng 30 gi√¢y.", ephemeral=True)

    def check(m):
        return m.author == interaction.user and m.attachments

    try:
        msg = await bot.wait_for("message", timeout=30.0, check=check)
        attachment = msg.attachments[0]

        if not attachment.filename.endswith((".txt", ".md", ".log")):
            await interaction.followup.send("‚ùå Ch·ªâ ch·∫•p nh·∫≠n file .txt, .md, .log th√¥i nha.")
            return

        file_bytes = await attachment.read()
        content = file_bytes.decode("utf-8", errors="ignore")

        if len(content) > 50000:
            await interaction.followup.send("‚ö†Ô∏è File qu√° d√†i (>50.000 k√Ω t·ª±)! Ch·ªâ g·ª≠i ph·∫ßn ƒë·∫ßu.")
            content = content[:50000]

        chunks = [content[i:i+1900] for i in range(0, len(content), 1900)]
        await interaction.followup.send(f"üìñ **N·ªôi dung `{attachment.filename}` ({len(chunks)} ph·∫ßn):**")

        for i, chunk in enumerate(chunks[:10]):
            await interaction.channel.send(f"```{chunk}```")
        if len(chunks) > 10:
            await interaction.channel.send("‚èπÔ∏è N·ªôi dung b·ªã c·∫Øt b·ªõt (ch·ªâ hi·ªÉn th·ªã 10 ph·∫ßn ƒë·∫ßu).")

    except asyncio.TimeoutError:
        await interaction.followup.send("‚è∞ H·∫øt th·ªùi gian ch·ªù file. H√£y th·ª≠ l·∫°i `/docfile` nh√©.")

# =========================
# üöÄ Run Flask + Discord
# =========================
keep_alive()  # ch·∫°y web server 0.0.0.0:8080

TOKEN = os.getenv("TOKEN")
if not TOKEN:
    print("‚ùå Thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng TOKEN!")
else:
    bot.run(TOKEN)
